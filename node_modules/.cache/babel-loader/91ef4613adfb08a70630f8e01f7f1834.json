{"ast":null,"code":"var _jsxFileName = \"/Users/jatingoyal/Desktop/coding/react/netflix-clone-yt/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"./axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchURL,\n    isLargeRow = false\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n  const base_url = \"https://image.tmdb.org/t/p/w500/\"; // console.log(movies);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n      className: `row_poster ${isLargeRow && row_largePoster}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["axios","React","useEffect","useState","Row","title","fetchURL","isLargeRow","movies","setMovies","fetchData","request","get","data","results","base_url","map","movie","row_largePoster","poster_path","backdrop_path","name"],"sources":["/Users/jatingoyal/Desktop/coding/react/netflix-clone-yt/src/Row.js"],"sourcesContent":["import axios from \"./axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Row.css\";\n\nfunction Row({ title, fetchURL, isLargeRow = false }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n\n  const base_url = \"https://image.tmdb.org/t/p/w500/\";\n  // console.log(movies);\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      {movies.map((movie) => (\n        <img\n          className={`row_poster ${isLargeRow && row_largePoster}`}\n          src={`${base_url}${\n            isLargeRow ? movie.poster_path : movie.backdrop_path\n          }`}\n          alt={movie.name}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Row;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,OAAsD;EAAA;;EAAA,IAAzC;IAAEC,KAAF;IAASC,QAAT;IAAmBC,UAAU,GAAG;EAAhC,CAAyC;EACpD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EAEAD,SAAS,CAAC,MAAM;IACd,eAAeQ,SAAf,GAA2B;MACzB,MAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUN,QAAV,CAAtB;MACAG,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;MAEA,OAAOH,OAAP;IACD;;IAEDD,SAAS;EACV,CATQ,EASN,CAACJ,QAAD,CATM,CAAT;EAWA,MAAMS,QAAQ,GAAG,kCAAjB,CAdoD,CAepD;;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,UAAKV;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,EAGGG,MAAM,CAACQ,GAAP,CAAYC,KAAD,iBACV;MACE,SAAS,EAAG,cAAaV,UAAU,IAAIW,eAAgB,EADzD;MAEE,GAAG,EAAG,GAAEH,QAAS,GACfR,UAAU,GAAGU,KAAK,CAACE,WAAT,GAAuBF,KAAK,CAACG,aACxC,EAJH;MAKE,GAAG,EAAEH,KAAK,CAACI;IALb;MAAA;MAAA;MAAA;IAAA,QADD,CAHH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA/BQjB,G;;KAAAA,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}