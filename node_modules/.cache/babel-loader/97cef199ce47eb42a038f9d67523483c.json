{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\nconst initialState = {\n  user: null // status: \"idle\",\n\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = userSlice.actions;\nexport const selectUser = state => state.user.user;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","act","initialState","user","userSlice","name","reducers","login","state","action","payload","logout","actions","selectUser","reducer"],"sources":["/Users/jatingoyal/Desktop/coding/react/netflix-clone-yt/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\n\nconst initialState = {\n  user: null,\n  // status: \"idle\",\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IADa,CAEnB;;AAFmB,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAD6B;EAEnCH,YAFmC;EAGnCI,QAAQ,EAAE;IACRC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxBD,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;IACD,CAHO;IAIRC,MAAM,EAAGH,KAAD,IAAW;MACjBA,KAAK,CAACL,IAAN,GAAa,IAAb;IACD;EANO;AAHyB,CAAD,CAA7B;AAaP,OAAO,MAAM;EAAEI,KAAF;EAASI;AAAT,IAAoBP,SAAS,CAACQ,OAApC;AAEP,OAAO,MAAMC,UAAU,GAAIL,KAAD,IAAWA,KAAK,CAACL,IAAN,CAAWA,IAAzC;AAEP,eAAeC,SAAS,CAACU,OAAzB"},"metadata":{},"sourceType":"module"}