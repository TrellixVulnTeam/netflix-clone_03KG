{"ast":null,"code":"var _jsxFileName = \"/Users/jatingoyal/Desktop/coding/react/netflix-clone-yt/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"./axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchURL,\n    isLargeRow = false\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n  const base_url = \"https://image.tmdb.org/t/p/w500/\"; // console.log(movies);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playVars: {\n      autoplay: 1\n    }\n  }; // const handleClick = (movie) => {\n  //   if (trailerUrl) {\n  //     setTrailerUrl(\"\");\n  //   } else {\n  //     movieTrailer(movie?.name || \"\").then((url)=>{\n  //       const urlParams = new URLSearchParams(new URL(url).search);\n  //       setTrailerUrl(urlParams.get('v'))\n  //     })\n  //   .catch((error) => console.log(error.message))\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        // onClick={() => handleClick(movie)}\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["axios","React","useEffect","useState","YouTube","movieTrailer","Row","title","fetchURL","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","base_url","opts","height","width","playVars","autoplay","map","movie","poster_path","backdrop_path","name","id"],"sources":["/Users/jatingoyal/Desktop/coding/react/netflix-clone-yt/src/Row.js"],"sourcesContent":["import axios from \"./axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nfunction Row({ title, fetchURL, isLargeRow = false }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n\n  const base_url = \"https://image.tmdb.org/t/p/w500/\";\n  // console.log(movies);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playVars: {\n      autoplay: 1,\n    },\n  };\n\n  // const handleClick = (movie) => {\n  //   if (trailerUrl) {\n  //     setTrailerUrl(\"\");\n  //   } else {\n  //     movieTrailer(movie?.name || \"\").then((url)=>{\n  //       const urlParams = new URLSearchParams(new URL(url).search);\n  //       setTrailerUrl(urlParams.get('v'))\n  //     })\n  //   .catch((error) => console.log(error.message))\n  // };\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row_posters\">\n        {movies.map((movie) => (\n          <img\n            // onClick={() => handleClick(movie)}\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n            key={movie.id}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AAEA,SAASC,GAAT,OAAsD;EAAA;;EAAA,IAAzC;IAAEC,KAAF;IAASC,QAAT;IAAmBC,UAAU,GAAG;EAAhC,CAAyC;EACpD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACd,eAAeY,SAAf,GAA2B;MACzB,MAAMC,OAAO,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAUR,QAAV,CAAtB;MACAG,SAAS,CAACI,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;MAEA,OAAOH,OAAP;IACD;;IAEDD,SAAS;EACV,CATQ,EASN,CAACN,QAAD,CATM,CAAT;EAWA,MAAMW,QAAQ,GAAG,kCAAjB,CAfoD,CAgBpD;;EAEA,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KADG;IAEXC,KAAK,EAAE,MAFI;IAGXC,QAAQ,EAAE;MACRC,QAAQ,EAAE;IADF;EAHC,CAAb,CAlBoD,CA0BpD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,UAAKjB;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,aAAf;MAAA,UACGG,MAAM,CAACe,GAAP,CAAYC,KAAD,iBACV;QACE;QACA,SAAS,EAAG,cAAajB,UAAU,IAAI,iBAAkB,EAF3D;QAIE,GAAG,EAAG,GAAEU,QAAS,GACfV,UAAU,GAAGiB,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aACxC,EANH;QAOE,GAAG,EAAEF,KAAK,CAACG;MAPb,GAGOH,KAAK,CAACI,EAHb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,EAeGlB,UAAU,iBAAI,QAAC,OAAD;MAAS,OAAO,EAAEA,UAAlB;MAA8B,IAAI,EAAEQ;IAApC;MAAA;MAAA;MAAA;IAAA,QAfjB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GAvDQd,G;;KAAAA,G;AAyDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}