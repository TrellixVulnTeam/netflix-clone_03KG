{"ast":null,"code":"var _jsxFileName = \"/Users/jatingoyal/Desktop/coding/react/netflix-clone-yt/src/Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport \"./Banner.css\"; //  this file includes nav bar tag so as to make of its functionality (background black when )\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  // --------------------------------------------------- Nav Background colour change\n  const targetRef = useRef(null);\n  const [show, handleShow] = useState(false);\n\n  const callBackFunction = entries => {\n    const [entry] = entries;\n    handleShow(entry.isIntersecting);\n  };\n\n  const options = useMemo(() => {\n    return {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.8\n    };\n  }, []);\n  useEffect(() => {\n    const observer = new IntersectionObserver(callBackFunction, options);\n    const currentTarget = targetRef.current;\n    if (currentTarget) observer.observe(currentTarget);\n    return () => {\n      if (currentTarget) observer.unobserve(currentTarget);\n    };\n  }, []); // ---------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      show: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      ref: targetRef,\n      className: \"banner\",\n      style: {\n        backgroundSize: \"cover\",\n        backgroundImage: 'url(\"https://www.bajajfinservmarkets.in/content/dam/emistoremarketplace/index/20-02-2020/netflix/Netflix-Banner_1080x419.jpg?impolicy=pqmedium\")',\n        backgroundPosition: \"center center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner_contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner_title\",\n          children: \"Movie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner_buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner_button\",\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner_button\",\n            children: \"My List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner_description\",\n          children: \"This is the test Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner_fadebutton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Banner, \"w29nksi52UuQZCTtF6zfojr+wEw=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Nav","Banner","targetRef","show","handleShow","callBackFunction","entries","entry","isIntersecting","options","root","rootMargin","threshold","observer","IntersectionObserver","currentTarget","current","observe","unobserve","backgroundSize","backgroundImage","backgroundPosition"],"sources":["/Users/jatingoyal/Desktop/coding/react/netflix-clone-yt/src/Banner.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport \"./Banner.css\";\n\n//  this file includes nav bar tag so as to make of its functionality (background black when )\n\nfunction Banner() {\n  // --------------------------------------------------- Nav Background colour change\n\n  const targetRef = useRef(null);\n  const [show, handleShow] = useState(false);\n\n  const callBackFunction = (entries) => {\n    const [entry] = entries;\n    handleShow(entry.isIntersecting);\n  };\n\n  const options = useMemo(() => {\n    return {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.8,\n    };\n  }, []);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(callBackFunction, options);\n    const currentTarget = targetRef.current;\n    if (currentTarget) observer.observe(currentTarget);\n\n    return () => {\n      if (currentTarget) observer.unobserve(currentTarget);\n    };\n  }, []);\n  // ---------------------------------------------------\n\n  return (\n    <>\n      <Nav show={show} />\n      <header\n        ref={targetRef}\n        className=\"banner\"\n        style={{\n          backgroundSize: \"cover\",\n          backgroundImage:\n            'url(\"https://www.bajajfinservmarkets.in/content/dam/emistoremarketplace/index/20-02-2020/netflix/Netflix-Banner_1080x419.jpg?impolicy=pqmedium\")',\n          backgroundPosition: \"center center\",\n        }}\n      >\n        <div className=\"banner_contents\">\n          <h1 className=\"banner_title\">Movie Name</h1>\n          <div className=\"banner_buttons\">\n            <button className=\"banner_button\">Play</button>\n            <button className=\"banner_button\">My List</button>\n          </div>\n          <h1 className=\"banner_description\">This is the test Description</h1>\n        </div>\n        <div className=\"banner_fadebutton\"></div>\n      </header>\n    </>\n  );\n}\n\nexport default Banner;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,cAAP,C,CAEA;;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB;EAEA,MAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;EACA,MAAM,CAACK,IAAD,EAAOC,UAAP,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;;EAEA,MAAMM,gBAAgB,GAAIC,OAAD,IAAa;IACpC,MAAM,CAACC,KAAD,IAAUD,OAAhB;IACAF,UAAU,CAACG,KAAK,CAACC,cAAP,CAAV;EACD,CAHD;;EAKA,MAAMC,OAAO,GAAGZ,OAAO,CAAC,MAAM;IAC5B,OAAO;MACLa,IAAI,EAAE,IADD;MAELC,UAAU,EAAE,KAFP;MAGLC,SAAS,EAAE;IAHN,CAAP;EAKD,CANsB,EAMpB,EANoB,CAAvB;EAQAhB,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBT,gBAAzB,EAA2CI,OAA3C,CAAjB;IACA,MAAMM,aAAa,GAAGb,SAAS,CAACc,OAAhC;IACA,IAAID,aAAJ,EAAmBF,QAAQ,CAACI,OAAT,CAAiBF,aAAjB;IAEnB,OAAO,MAAM;MACX,IAAIA,aAAJ,EAAmBF,QAAQ,CAACK,SAAT,CAAmBH,aAAnB;IACpB,CAFD;EAGD,CARQ,EAQN,EARM,CAAT,CAnBgB,CA4BhB;;EAEA,oBACE;IAAA,wBACE,QAAC,GAAD;MAAK,IAAI,EAAEZ;IAAX;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,GAAG,EAAED,SADP;MAEE,SAAS,EAAC,QAFZ;MAGE,KAAK,EAAE;QACLiB,cAAc,EAAE,OADX;QAELC,eAAe,EACb,kJAHG;QAILC,kBAAkB,EAAE;MAJf,CAHT;MAAA,wBAUE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAI,SAAS,EAAC,cAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,gBAAf;UAAA,wBACE;YAAQ,SAAS,EAAC,eAAlB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,SAAS,EAAC,eAAlB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAME;UAAI,SAAS,EAAC,oBAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,eAkBE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAlBF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAyBD;;GAvDQpB,M;;KAAAA,M;AAyDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}